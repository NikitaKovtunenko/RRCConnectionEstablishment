/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "asn/EUTRA-RRC-Definitions.asn"
 * 	`asn1c -D src -pdu=RRCConnectionRequest -no-gen-OER -fcompound-names -no-gen-example -fno-include-deps`
 */

#ifndef	_SL_DiscConfig_r12_H_
#define	_SL_DiscConfig_r12_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NULL.h>
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>
#include "SL-TF-IndexPairList-r12b.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum SL_DiscConfig_r12__discTxResources_r12_PR {
	SL_DiscConfig_r12__discTxResources_r12_PR_NOTHING,	/* No components present */
	SL_DiscConfig_r12__discTxResources_r12_PR_release,
	SL_DiscConfig_r12__discTxResources_r12_PR_setup
} SL_DiscConfig_r12__discTxResources_r12_PR;
typedef enum SL_DiscConfig_r12__discTxResources_r12__setup_PR {
	SL_DiscConfig_r12__discTxResources_r12__setup_PR_NOTHING,	/* No components present */
	SL_DiscConfig_r12__discTxResources_r12__setup_PR_scheduled_r12,
	SL_DiscConfig_r12__discTxResources_r12__setup_PR_ue_Selected_r12
} SL_DiscConfig_r12__discTxResources_r12__setup_PR;
typedef enum SL_DiscConfig_r12__discTF_IndexList_v1260_PR {
	SL_DiscConfig_r12__discTF_IndexList_v1260_PR_NOTHING,	/* No components present */
	SL_DiscConfig_r12__discTF_IndexList_v1260_PR_release,
	SL_DiscConfig_r12__discTF_IndexList_v1260_PR_setup
} SL_DiscConfig_r12__discTF_IndexList_v1260_PR;

/* Forward declarations */
struct SL_DiscResourcePool_r12;
struct SL_TF_IndexPairList_r12;
struct SL_HoppingConfigDisc_r12;
struct SL_TxPoolToReleaseList_r12;
struct SL_DiscTxPoolToAddModList_r12;

/* SL-DiscConfig-r12 */
typedef struct SL_DiscConfig_r12 {
	struct SL_DiscConfig_r12__discTxResources_r12 {
		SL_DiscConfig_r12__discTxResources_r12_PR present;
		union SL_DiscConfig_r12__discTxResources_r12_u {
			NULL_t	 release;
			struct SL_DiscConfig_r12__discTxResources_r12__setup {
				SL_DiscConfig_r12__discTxResources_r12__setup_PR present;
				union SL_DiscConfig_r12__discTxResources_r12__setup_u {
					struct SL_DiscConfig_r12__discTxResources_r12__setup__scheduled_r12 {
						struct SL_DiscResourcePool_r12	*discTxConfig_r12	/* OPTIONAL */;
						struct SL_TF_IndexPairList_r12	*discTF_IndexList_r12	/* OPTIONAL */;
						struct SL_HoppingConfigDisc_r12	*discHoppingConfig_r12	/* OPTIONAL */;
						
						/* Context for parsing across buffer boundaries */
						asn_struct_ctx_t _asn_ctx;
					} scheduled_r12;
					struct SL_DiscConfig_r12__discTxResources_r12__setup__ue_Selected_r12 {
						struct SL_DiscConfig_r12__discTxResources_r12__setup__ue_Selected_r12__discTxPoolDedicated_r12 {
							struct SL_TxPoolToReleaseList_r12	*poolToReleaseList_r12	/* OPTIONAL */;
							struct SL_DiscTxPoolToAddModList_r12	*poolToAddModList_r12	/* OPTIONAL */;
							
							/* Context for parsing across buffer boundaries */
							asn_struct_ctx_t _asn_ctx;
						} *discTxPoolDedicated_r12;
						
						/* Context for parsing across buffer boundaries */
						asn_struct_ctx_t _asn_ctx;
					} ue_Selected_r12;
				} choice;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} setup;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *discTxResources_r12;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct SL_DiscConfig_r12__discTF_IndexList_v1260 {
		SL_DiscConfig_r12__discTF_IndexList_v1260_PR present;
		union SL_DiscConfig_r12__discTF_IndexList_v1260_u {
			NULL_t	 release;
			struct SL_DiscConfig_r12__discTF_IndexList_v1260__setup {
				SL_TF_IndexPairList_r12b_t	 discTF_IndexList_r12b;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} setup;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *discTF_IndexList_v1260;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SL_DiscConfig_r12_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SL_DiscConfig_r12;
extern asn_SEQUENCE_specifics_t asn_SPC_SL_DiscConfig_r12_specs_1;
extern asn_TYPE_member_t asn_MBR_SL_DiscConfig_r12_1[2];

#ifdef __cplusplus
}
#endif

#endif	/* _SL_DiscConfig_r12_H_ */
#include <asn_internal.h>
